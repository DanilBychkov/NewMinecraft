using System;
using System.Collections.Generic;
using System.Text;
using static System.Net.Mime.MediaTypeNames;

namespace Minecraft.Models
{
    public class Maps
    {
        private readonly int[,] mainMap = 
        { 
            {2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},{2,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,2},{2,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,0,0,3,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,3,0,0,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,3,3,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,5,1,1,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,4,4,0,4,5,5,5,5,1,1,2},
            {2,0,0,0,0,0,0,0,0,4,4,4,4,0,4,4,0,0,1,1,2},{2,0,0,0,0,0,0,0,4,4,4,5,5,5,5,5,5,5,1,1,2},{2,0,0,0,0,0,0,0,0,4,4,4,4,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,1,1,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,5,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},
            {2,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,6,6,0,0,6,6,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,6,6,0,0,0,6,0,0,0,6,6,0,1,1,2},
            {2,0,0,0,0,0,0,6,0,0,6,6,0,0,0,6,0,0,1,1,2},{2,0,0,0,0,0,0,6,0,0,6,0,0,6,6,6,0,0,1,1,2},{2,0,0,6,0,0,6,6,0,0,6,0,6,6,0,6,0,0,1,1,2},{2,0,6,6,6,0,6,0,0,0,6,6,6,0,0,6,0,0,1,1,2},
            {2,0,6,0,6,0,6,0,0,0,6,0,0,0,0,6,0,0,1,1,2},{2,0,6,6,6,0,6,0,0,0,6,6,6,0,0,6,0,0,1,1,2},{2,0,0,6,0,0,6,6,0,0,6,0,6,6,0,6,0,0,1,1,2},{2,0,0,0,0,0,0,6,0,0,6,0,0,6,6,6,0,0,1,1,2},
            {2,0,0,0,0,0,0,6,0,0,6,6,0,0,0,6,0,0,1,1,2},{2,0,0,0,0,0,6,6,0,0,0,6,0,0,0,6,6,0,1,1,2},{2,0,0,0,0,0,6,0,0,0,0,6,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,6,6,0,0,6,6,0,0,0,0,0,0,1,1,2},
            {2,0,0,0,0,0,0,6,6,6,6,0,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,4,4,5,5,5,1,1,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,5,1,1,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},
            {2,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,1,1,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,1,1,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1,1,2},{2,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,1,1,2},{2,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,1,1,2},{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
        };
        private readonly int[,] caveMap = 
        { 
            { 1,1, 1, 1, 1, 1, 1, 1, 1,1,1,1,1,1,1,1 }, { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1 },{ 1,0, 1, 1, 1, 1, 1, 1, 1,1,1,1,0,1,0,1 }, { 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1 },
            { 1,0, 0, 1, 1, 0, 1, 0, 1,1,1,1,0,1,0,1 },{ 1,0, 0, 1, 0, 0, 1, 0, 0,0,0,0,0,1,0,1 },{ 1,0, 0, 1, 0, 0, 1, 1, 1,1,1,1,0,1,0,1 },{ 1,0, 0,1, 0, 0, 0, 1, 0,0,0,1,0,1,0,1 },
            { 1,0, 0,1, 0, 1, 0, 1, 0,1,0,1,0,1,0,1 }, { 1, 0, 0,0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1 }, { 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
            { 1,0, 1, 0, 0, 1, 1, 0, 0,1,0,0,0,1,0,1 },{ 1,0, 1, 0, 0, 1, 1, 0, 1,1,0,1,0,0,0,1 },{ 1,0, 1, 0, 0, 0, 0, 0, 1,1,0,0,0,1,0,1 },{ 1,0, 0, 0, 1, 1, 1, 0, 1,1,1,0,0,1,0,1 },
            { 1,1, 1, 0, 1, 0, 1, 0, 0,0,0,0,0,1,0,1 },{ 1,0, 0, 0, 0, 0, 1, 0, 1,0,1,0,0,1,0,1 },{ 1,1, 1, 0, 1, 1, 1, 0, 1,0,1,0,1,1,0,1 },{ 1,1, 1, 1, 1, 1, 1, 1, 1,1,1,1,1,1,1,1 } 
        };
        private readonly int[,] arenaTrial = { };
        private readonly int[] decorationObject = new int[3] { 0, 4, 5 };

        public int[,] GetMap(Trials trial)
        {
            if (Trials.CaveTrial == trial) return caveMap;
            else if (Trials.MainTrial == trial) return mainMap;
            return arenaTrial;
        }

        public int[] GetDecorationObjerct()
        {
            return decorationObject;
        }
    }
}

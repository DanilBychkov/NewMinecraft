using System;
using System.Collections.Generic;
using System.Text;
using static System.Net.Mime.MediaTypeNames;
using System.Linq;

namespace Minecraft.Models
{
    public class Maps
    {
        private readonly int[,] mainMap = 
        { 
            {2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},{2,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,2},{2,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,0,0,3,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,3,0,0,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,3,3,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,5,9,7,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,4,4,0,4,5,5,5,5,9,7,2},
            {2,0,0,0,0,0,0,0,0,4,4,4,4,0,4,4,0,0,9,7,2},{2,0,0,0,0,0,0,0,4,4,4,5,5,5,5,5,5,5,9,7,2},{2,0,0,0,0,0,0,0,0,4,4,4,4,0,0,0,0,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,9,7,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,5,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,7,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,7,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,2},
            {2,0,0,0,0,0,0,0,3,0,0,3,3,3,3,3,3,3,3,3,2}, {2,0,0,0,0,0,0,3,0,0,0,3,3,3,3,3,3,3,3,3,2},{2,0,0,0,0,0,3,3,0,0,0,3,3,3,3,3,3,3,3,3,2},{2,0,0,0,0,0,3,3,0,0,0,3,3,3,3,3,3,3,3,3,2},
            {2,0,0,0,0,3,3,3,0,0,0,3,3,3,3,3,3,3,3,3,2},{2,0,0,0,0,3,3,3,0,0,0,3,3,3,3,3,3,3,3,3,2},{2,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,2},
        };
        private readonly int[,] mainMapFall =
{
            {2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},{2,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,2},{2,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,0,0,3,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,3,0,0,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,3,3,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,5,9,7,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,4,4,0,4,5,5,5,5,9,7,2},
            {2,0,0,0,0,0,0,0,0,4,4,4,4,0,4,4,0,0,9,7,2},{2,0,0,0,0,0,0,0,4,4,4,5,5,5,5,5,5,5,9,7,2},{2,0,0,0,0,0,0,0,0,4,4,4,4,0,0,0,0,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,9,7,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,5,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,7,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,7,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,7,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,2},
            {2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,2},{2,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,2},
            {2,0,0,0,0,0,0,0,3,0,0,3,3,3,3,3,3,3,3,3,2}, {2,0,0,0,0,0,0,3,0,0,0,3,3,3,3,3,3,3,3,3,2},{2,0,0,0,0,0,3,3,0,0,0,3,3,3,3,3,3,3,3,3,2},{2,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,3,2},
            {2,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,3,2},{2,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,3,2},{2,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,2},
        };
        private readonly int[,] caveMap = 
        { 
            { 1,1, 1, 1, 1, 1, 1, 1, 1,1,1,1,1,1,1,1 }, { 1, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 1, 8, 1 },{ 1,8, 1, 1, 1, 1, 1, 1, 1,1,1,1,8,1,8,1 }, { 1, 8, 8,8, 1, 8, 1, 8, 8,8, 8, 1, 8, 1, 8, 1 },
            { 1,8, 8, 1, 1, 8, 1, 8, 1,1,1,1,8,1,8,1 },{ 1,8, 8, 1, 8, 8, 1, 8, 8,8,8,8,8,1,8,1 },{ 1,8, 8, 1, 8, 8, 1, 1, 1,1,1,1,8,1,8,1 },{ 1,8, 8,1, 8, 8, 8, 1, 8,8,8,1,8,1,8,1 },
            { 1,8, 8,1, 8, 1, 8, 1, 8,1,1,1,8,1,8,1 }, { 1, 8, 8,8, 8, 1, 8, 8, 8, 1, 8, 8, 8, 8, 8, 1 }, { 1, 8, 1, 8, 8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            { 1,8, 1, 8, 8, 1, 1, 8, 8,1,8,8,8,1,8,0 },{ 1,8, 1, 8, 8, 1, 1, 8, 1,1,8,1,8,8,8,0 },{ 1,8, 1, 8, 8, 8, 8, 8, 1,1,8,8,8,1,8,0 },{ 1,8, 8, 8, 1, 1, 1, 8, 1,1,1,8,8,1,8,0 },
            { 1,1, 1, 8, 1, 8, 1, 8, 8,8,8,8,8,1,8,0 },{ 1,8, 8, 8, 8, 8, 1, 8, 1,8,1,8,8,1,8,0 },{ 1,1, 1, 8, 1, 1, 1, 8, 1,8,1,8,1,1,8,0 },{ 1,1, 1, 1, 1, 1, 1, 1, 1,1,1,1,1,1,1,1 } 
        };
        private readonly int[,] arenaTrial = {{ 3,3,3,3,3,3,3,3,3,3,3,3,3},{ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },{3,0,0,3,3,3,3,3,3,3,3,3,3,},{3,0,0,0,0,3,3,3,3,3,3,3,3},{ 3,0,0,0,0,0,0,3,3,3,3,3,3},
            { 3,0,0,0,0,0,0,0,0,0,3,3,3},{ 3,0,0,0,0,0,0,0,0,0,3,3,3},{ 3,0,0,0,0,0,0,0,0,0,3,3,3},{ 3,0,0,0,0,0,0,0,0,0,3,3,3},{ 3,0,0,0,0,0,0,0,0,0,3,3,3},{3,0,0,0,0,0,0,0,0,0,3,3,3},
            { 3,0,0,0,0,0,0,0,0,0,3,3,3},{ 3,0,0,0,0,0,0,0,0,0,3,3,3},{ 3,0,0,0,0,0,0,0,0,0,3,3,3},{ 3,0,0,0,0,0,0,0,0,0,3,3,3},{ 3,0,0,0,0,0,0,0,0,0,3,3,3},{ 3,0,0,0,0,0,0,0,0,0,3,3,3},{ 3,0,0,0,0,0,0,0,0,0,3,3,3},{3,0,0,0,0,0,0,3,3,3,3,3,3},
            { 3,0,0,0,0,3,3,3,3,3,3,3,3},{ 3,0,0,0,0,3,3,3,3,3,3,3,3},{ 3,0,0,0,0,3,3,3,3,3,3,3,3},{ 3,0,0,0,0,3,3,3,3,3,3,3,3} };

        private readonly int[] decorationObject = {0, 4, 5,8};

        public int[,] GetMainMapFall()
        {
            return mainMapFall;
        }

        public int[,] GetMap(Trials trial)
        {
            if (Trials.CaveTrial == trial) 
                return caveMap;
            else if (Trials.MainTrial == trial) 
                return mainMap;
            else if(Trials.ArenaTrial==trial)
                 return arenaTrial;
            return new int[,] { { } };
        }

        public int[] GetDecorationObjerct()
        {
            return decorationObject;
        }
    }
}
